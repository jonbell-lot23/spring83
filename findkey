#!/usr/bin/env node

const ed = require('@noble/ed25519');
const { pubKeyIsValid } = require('./common');

async function findMatchingKey (strict, rounds = 0, matchedResolver) {
  const next = findMatchingKey.bind(null, strict, rounds + 1);

  if (rounds === 0) {
    return new Promise((resolve) => next(resolve));
  }

  const privateKey = ed.utils.randomPrivateKey();
  const publicKey = await ed.getPublicKey(privateKey);

  if (pubKeyIsValid(publicKey, strict)) {
    return matchedResolver({ rounds, matched: { privateKey, publicKey } });
  }

  setTimeout(next.bind(null, matchedResolver), 0);
}

async function main () {
  const start = Number(new Date());

  ['SIGINT', 'SIGHUP'].forEach(sig => process.on(sig, () => process.exit()));

  const { rounds, matched } = await findMatchingKey(process.argv.length > 2 && process.argv[2] === '--strict');

  for (const [type, keyData] of Object.entries(matched)) {
    console.log(type, Buffer.from(keyData).toString('hex'));
  }

  console.log(rounds);
  console.log(Number(new Date()) - start);
}

if (require.main === module) {
  main();
} else {
  module.exports = {
    pubKeyIsValid,
    findMatchingKey
  };
}
